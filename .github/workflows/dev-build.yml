name: build

on:
  push:
    branches: [ master, develop ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Decode keystore
      env:
            ENCODED_STRING: ${{ secrets.KEYSTORE }}
      run: |
            TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
            mkdir "${TMP_KEYSTORE_FILE_PATH}"
            echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/skvirrel.jks

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew clean build check assembleRelease
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
          name: Build Artifacts
          path: app/build/outputs/

    - name: Create Release
      if: github.event_name == 'release'
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_ACCESS_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

    - name: Upload apk to release
      if: github.event_name == 'release'
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_ACCESS_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/*.apk
          asset_name: .apk
          asset_content_type: application/apk
